---

# https://medium.com/better-programming/how-to-upgrade-your-postgresql-version-using-docker-d1e81dbbbdf9
# https://www.postgresql.org/docs/13/upgrading.html

- name: stop everything but postgres
  become: yes
  ansible.builtin.shell:
    cmd: docker-compose stop {{ docker_jfrog_xray_docker_compose_not_postgres }}
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash

- name: ensure the dump file is not present
  become: yes
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_docker_compose_folder }}/dump.sql"
    state: absent

# For some reason using docker-compose exec here throws a python error.
- name: export the postgres data
  become: yes
  ansible.builtin.shell:
    cmd: docker exec {{ docker_jfrog_xray_docker_compose_postgres_container_name }} pg_dumpall -U {{ docker_jfrog_xray_postgres_user }} > dump.sql
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash

- name: stop all the docker-compose containers
  become: yes
  ansible.builtin.shell:
    cmd: docker-compose stop
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash

- name: delete any backup of the mapped volume for postgresql
  become: yes
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_data }}/postgresql.bak"
    state: absent

- name: backup the mapped volume for postgresql
  become: yes
  ansible.builtin.copy:
    src: "{{ docker_jfrog_xray_data }}/{{ docker_jfrog_xray_postgres_data }}"
    remote_src: yes
    dest: "{{ docker_jfrog_xray_data }}/postgresql.bak"

- name: delete the mapped volume for postgresql
  become: yes
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_data }}/{{ docker_jfrog_xray_postgres_data }}"
    state: absent

- name: recreate the folder for the postgresql mapped volume
  become: yes
  file:
    path: "{{ docker_jfrog_xray_data }}/{{ docker_jfrog_xray_postgres_data }}"
    state: directory
    mode: 0700

- name: ensure the data dump file is readable
  become: yes
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_docker_compose_folder }}/dump.sql"
    mode: 0444

- name: start just the postgresql container
  become: yes
  ansible.builtin.shell:
    cmd: docker-compose start {{ docker_jfrog_xray_docker_compose_postgres_container_name }}
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash

- name: copy the data dump into the container
  become: yes
  ansible.builtin.shell:
    cmd: docker cp {{ docker_jfrog_xray_docker_compose_folder }}/dump.sql {{ docker_jfrog_xray_docker_compose_postgres_container_name }}:/tmp
    executable: /bin/bash

- name: wait 15 seconds to ensure the database has had time to startup
  pause:
    seconds: 15

- name: import the postgres data
  become: yes
  ansible.builtin.shell:
    cmd: docker exec {{ docker_jfrog_xray_docker_compose_postgres_container_name }} sh -c 'psql -U {{ docker_jfrog_xray_postgres_user }} -d {{ docker_jfrog_xray_postgres_default_db }} < /tmp/dump.sql'
    executable: /bin/bash

- name: wait 15 seconds to ensure the changes have all been imported
  pause:
    seconds: 15

- name: delete the data dump file from the docker compose
  become: yes
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_docker_compose_folder }}/dump.sql"
    state: absent
